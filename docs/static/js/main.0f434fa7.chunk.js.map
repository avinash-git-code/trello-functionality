{"version":3,"sources":["actions/listsActions.js","actions/cardsActions.js","actions/index.js","reducers/listsReducer.js","reducers/cardsReducer.js","reducers/boardsReducer.js","reducers/boardOrderReducer.js","reducers/activeBoardReducer.js","reducers/index.js","store/index.js","components/TrelloForm.js","components/TrelloButton.js","components/TrelloCard.js","components/TrelloOpenForm.js","components/TrelloCreate.js","components/TrelloList.js","components/TrelloBoard.js","actions/boardActions.js","components/BoardThumbnail.js","components/Home.js","routes/index.js","components/App.js","index.js"],"names":["addList","title","dispatch","getState","boardID","activeBoard","id","uuid","type","CONSTANTS","ADD_LIST","payload","addCard","listID","text","ADD_CARD","DRAG_HAPPENED","EDIT_CARD","DELETE_CARD","EDIT_LIST_TITLE","DELETE_LIST","SET_ACTIVE_BOARD","ADD_BOARD","initialState","list-0","cards","board","listsReducer","state","arguments","length","undefined","action","_action$payload","newList","concat","Object","objectSpread","defineProperty","_action$payload2","list","push","_action$payload3","droppableIdStart","droppableIdEnd","droppableIndexEnd","droppableIndexStart","_list$cards","card","splice","apply","toConsumableArray","_listEnd$cards","_objectSpread5","listStart","listEnd","_action$payload4","newCards","filter","cardID","_action$payload5","newTitle","newState","card-0","cardsReducer","newCard","newText","board-0","lists","boardsReducer","newListID","newLists","pulledOutList","newID","newBoard","console","log","boardOrderReducer","activeBoardReducer","combineReducers","boards","boardOrder","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","Container","styled","div","_templateObject","StyledCard","Card","_templateObject2","StyledTextArea","Textarea","_templateObject3","ButtonContainer","_templateObject4","StyledIcon","Icon","_templateObject5","TrelloForm","React","memo","_ref","_ref$text","onChange","closeForm","children","placeholder","react_default","a","createElement","autoFocus","value","e","onBlur","onMouseDown","StyledButton","Button","TrelloButton_templateObject","TrelloButton","onClick","variant","CardContainer","TrelloCard_templateObject","EditButton","TrelloCard_templateObject2","DeleteButton","TrelloCard_templateObject3","TrelloCard","index","_useState","useState","_useState2","slicedToArray","isEditing","setIsEditing","_useState3","_useState4","cardText","setText","handleChange","target","saveCard","preventDefault","editCard","handleDeleteCard","deleteCard","components_TrelloForm","components_TrelloButton","react_beautiful_dnd_esm","draggableId","String","provided","assign","draggableProps","dragHandleProps","ref","innerRef","onDoubleClick","Card_default","fontSize","CardContent_default","Typography_default","connect","TrelloOpenForm","buttonTextOpacity","buttonTextColor","buttonTextBackground","OpenFormButton","TrelloOpenForm_templateObject","Icon_default","style","flexShrink","TrelloCreate","formOpen","openForm","_this","setState","handleInputChange","handleAddList","props","handleAddCard","_this$props","renderOpenForm","buttonText","TrelloCreate_templateObject","this","components_TrelloOpenForm","PureComponent","ListContainer","TrelloList_templateObject","StyledInput","input","TrelloList_templateObject2","TitleContainer","TrelloList_templateObject3","TrelloList_templateObject4","ListTitle","h4","TrelloList_templateObject5","listTitle","setListTitle","handleFocus","select","handleFinishEditing","editTitle","handleDeleteList","deleteList","droppableId","onSubmit","onFocus","TrelloList_DeleteButton","droppableProps","map","components_TrelloCard","components_TrelloCreate","ListsContainer","TrelloBoard_templateObject","TrelloBoard","onDragEnd","result","destination","match","params","listOrder","react_router_dom","to","direction","listCards","components_TrelloList","Thumbnail","BoardThumbnail_templateObject","Title","BoardThumbnail_templateObject2","BoardThumbnail","Thumbnails","Home_templateObject","HomeContainer","Home_templateObject2","CreateTitle","h3","Home_templateObject3","CreateInput","Home_templateObject4","newBoardTitle","setNewBoardTitle","handleSubmit","addBoard","textDecoration","components_BoardThumbnail","textAlign","AppRouter","react_router","path","exact","component","Home","App","routes","store","createStore","applyMiddleware","thunk","persistor","persistStore","Store","ReactDOM","render","es","integration_react","loading","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.0f434fa7.chunk.js","sourcesContent":["import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nexport const addList = title => {\n  return (dispatch, getState) => {\n    const boardID = getState().activeBoard;\n    const id = uuid();\n    dispatch({\n      type: CONSTANTS.ADD_LIST,\n      payload: { title, boardID, id }\n    });\n  };\n};\n\n\nexport const editTitle = (listID, newTitle) => {\n  return {\n    payload: {\n      listID,\n      newTitle\n    }\n  };\n};\n\nexport const deleteList = listID => {\n  return (dispatch, getState) => {\n    const boardID = getState().activeBoard;\n    return dispatch({\n      payload: {\n        listID,\n        boardID\n      }\n    });\n  };\n};\n","import uuid from \"uuidv4\";\n\nexport const addCard = (listID, text) => {\n  const id = uuid();\n  return {\n    payload: { text, listID, id }\n  };\n};\n\nexport const editCard = (id, listID, newText) => {\n  return {\n    payload: { id, listID, newText }\n  };\n};\n\nexport const deleteCard = (id, listID) => {\n  return {\n    payload: { id, listID }\n  };\n};\n","export * from \"./listsActions\";\nexport * from \"./cardsActions\";\nexport * from \"./boardActions\";\n\nexport const CONSTANTS = {\n  ADD_CARD: \"ADD_CARD\",\n  ADD_LIST: \"ADD_LIST\",\n  DRAG_HAPPENED: \"DRAG_HAPPENED\",\n  EDIT_CARD: \"EDIT_CARD\",\n  DELETE_CARD: \"DELETE_CARD\",\n  EDIT_LIST_TITLE: \"EDIT_LIST_TITLE\",\n  DELETE_LIST: \"DELETE_LIST\",\n  SET_ACTIVE_BOARD: \"SET_ACTIVE_BOARD\",\n  ADD_BOARD: \"ADD_BOARD\"\n};\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n  \"list-0\": {\n    id: \"list-0\",\n    cards: [\"card-0\"],\n    title: \"myList\",\n    board: \"board-0\"\n  }\n};\n\nconst listsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const { title, id } = action.payload;\n      const newList = {\n        title: title,\n        id: `list-${id}`,\n        cards: []\n      };\n\n      const newState = { ...state, [`list-${id}`]: newList };\n\n      return newState;\n    }\n\n    case CONSTANTS.ADD_CARD: {\n      const { listID, id } = action.payload;\n      const list = state[listID];\n      list.cards.push(`card-${id}`);\n      return { ...state, [listID]: list };\n    }\n\n    case CONSTANTS.DRAG_HAPPENED:\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexEnd,\n        droppableIndexStart,\n\n        type\n      } = action.payload;\n\n      // draggin lists around - the listOrderReducer should handle this\n      if (type === \"list\") {\n        return state;\n      }\n\n      // in the same list\n      if (droppableIdStart === droppableIdEnd) {\n        const list = state[droppableIdStart];\n        const card = list.cards.splice(droppableIndexStart, 1);\n        list.cards.splice(droppableIndexEnd, 0, ...card);\n        return { ...state, [droppableIdStart]: list };\n      }\n\n      // other list\n      if (droppableIdStart !== droppableIdEnd) {\n        // find the list where the drag happened\n        const listStart = state[droppableIdStart];\n        // pull out the card from this list\n        const card = listStart.cards.splice(droppableIndexStart, 1);\n        // find the list where the drag ended\n        const listEnd = state[droppableIdEnd];\n\n        // put the card in the new list\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card);\n        return {\n          ...state,\n          [droppableIdStart]: listStart,\n          [droppableIdEnd]: listEnd\n        };\n      }\n      return state;\n\n    case CONSTANTS.DELETE_CARD: {\n      const { listID, id } = action.payload;\n\n      const list = state[listID];\n      const newCards = list.cards.filter(cardID => cardID !== id);\n\n      return { ...state, [listID]: { ...list, cards: newCards } };\n    }\n\n    case CONSTANTS.EDIT_LIST_TITLE: {\n      const { listID, newTitle } = action.payload;\n\n      const list = state[listID];\n      list.title = newTitle;\n      return { ...state, [listID]: list };\n    }\n\n    case CONSTANTS.DELETE_LIST: {\n      const { listID } = action.payload;\n      const newState = state;\n      delete newState[listID];\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default listsReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n  \"card-0\": {\n    text: \"Last Episode\",\n    id: `card-0`,\n    list: \"list-0\"\n  }\n};\n\nconst cardsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_CARD: {\n      const { text, listID, id } = action.payload;\n\n      const newCard = {\n        text,\n        id: `card-${id}`,\n        list: listID\n      };\n\n      return { ...state, [`card-${id}`]: newCard };\n    }\n    case CONSTANTS.EDIT_CARD: {\n      const { id, newText } = action.payload;\n      const card = state[id];\n      card.text = newText;\n      return { ...state, [`card-${id}`]: card };\n    }\n\n    case CONSTANTS.DELETE_CARD: {\n      const { id } = action.payload;\n      const newState = state;\n      delete newState[id];\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default cardsReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n  \"board-0\": {\n    id: \"board-0\",\n    lists: [\"list-0\"],\n    title: \"Trello board\"\n  }\n};\n\nconst boardsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const { boardID, id } = action.payload;\n      const board = state[boardID];\n      const newListID = `list-${id}`;\n      const newLists = [...board.lists, newListID];\n      board.lists = newLists;\n      return { ...state, [boardID]: board };\n    }\n\n    case CONSTANTS.DRAG_HAPPENED: {\n      const { boardID } = action.payload;\n      const board = state[boardID];\n      const lists = board.lists;\n      const {\n        droppableIndexEnd,\n        droppableIndexStart,\n\n        type\n      } = action.payload;\n\n      // draggin lists around\n      if (type === \"list\") {\n        const pulledOutList = lists.splice(droppableIndexStart, 1);\n        lists.splice(droppableIndexEnd, 0, ...pulledOutList);\n        board.lists = lists;\n\n        return { ...state, [boardID]: board };\n      }\n      return state;\n    }\n    case CONSTANTS.DELETE_LIST: {\n      const { listID, boardID } = action.payload;\n      const board = state[boardID];\n      const lists = board.lists;\n      const newLists = lists.filter(id => id !== listID);\n      board.lists = newLists;\n      return { ...state, [boardID]: board };\n    }\n\n    case CONSTANTS.ADD_BOARD: {\n      const { title, id } = action.payload;\n      const newID = `board-${id}`;\n      const newBoard = {\n        id: newID,\n        title,\n        lists: []\n      };\n\n      return { ...state, [newID]: newBoard };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default boardsReducer;\n","import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nconsole.log(uuid());\n\nconst initialState = [\"board-0\"];\n\nconst boardOrderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_BOARD: {\n      return [...state, `board-${action.payload.id}`];\n    }\n    default:\n      return state;\n  }\n};\n\nexport default boardOrderReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = null;\n\nconst activeBoardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.SET_ACTIVE_BOARD: {\n      return action.payload;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default activeBoardReducer;\n","import { combineReducers } from \"redux\";\nimport listsReducer from \"./listsReducer\";\nimport cardsReducer from \"./cardsReducer\";\nimport boardsReducer from \"./boardsReducer\";\nimport boardOrderReducer from \"./boardOrderReducer\";\nimport activeBoardReducer from \"./activeBoardReducer\";\n\nexport default combineReducers({\n  lists: listsReducer,\n  cards: cardsReducer,\n  boards: boardsReducer,\n  boardOrder: boardOrderReducer,\n  activeBoard: activeBoardReducer\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"../reducers\";\nimport thunk from \"redux-thunk\";\n\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default () => {\n  let store = createStore(persistedReducer, applyMiddleware(thunk));\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Textarea from \"react-textarea-autosize\";\nimport Card from \"@material-ui/core/Card\";\n\nconst Container = styled.div`\n  width: 284px;\n  margin-bottom: 8px;\n`;\n\nconst StyledCard = styled(Card)`\n  min-height: 85px;\n  padding: 6px 8px 2px;\n`;\n\nconst StyledTextArea = styled(Textarea)`\n  resize: none;\n  width: 100%;\n  overflow: hidden;\n  outline: none;\n  border: none;\n`;\n\nconst ButtonContainer = styled.div`\n  margin-top: 8px;\n  display: flex;\n  align-items: center;\n  margin-left: 8px;\n`;\n\nconst StyledIcon = styled(Icon)`\n  margin-left: 8px;\n  cursor: pointer;\n`;\n\nconst TrelloForm = React.memo(\n  ({ list, text = \"\", onChange, closeForm, children }) => {\n    const placeholder = list\n      ? \"Enter list title...\"\n      : \"Enter a title for this card...\";\n\n    return (\n      <Container>\n        <StyledCard>\n          <StyledTextArea\n            placeholder={placeholder}\n            autoFocus\n            value={text}\n            onChange={e => onChange(e)}\n            onBlur={closeForm}\n          />\n        </StyledCard>\n        <ButtonContainer>\n          {children}\n          <StyledIcon onMouseDown={closeForm}>close</StyledIcon>\n        </ButtonContainer>\n      </Container>\n    );\n  }\n);\n\nexport default TrelloForm;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\n\nconst StyledButton = styled(Button)`\n  && {\n    color: white;\n    background: #5aac44;\n  }\n`;\n\nconst TrelloButton = ({ children, onClick }) => {\n  return (\n    <StyledButton variant=\"contained\" onMouseDown={onClick}>\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default TrelloButton;\n","import React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport Icon from \"@material-ui/core/Icon\";\nimport TrelloForm from \"./TrelloForm\";\nimport { editCard, deleteCard } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport TrelloButton from \"./TrelloButton\";\n\nconst CardContainer = styled.div`\n  margin: 0 0 8px 0;\n  position: relative;\n  max-width: 100%;\n  word-wrap: break-word;\n`;\n\nconst EditButton = styled(Icon)`\n  position: absolute;\n  display: none;\n  right: 5px;\n  top: 5px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst DeleteButton = styled(Icon)`\n  position: absolute;\n  display: none;\n  right: 5px;\n  bottom: 5px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst TrelloCard = React.memo(({ text, id, listID, index, dispatch }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [cardText, setText] = useState(text);\n\n  const closeForm = e => {\n    setIsEditing(false);\n  };\n\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n\n  const saveCard = e => {\n    e.preventDefault();\n\n    dispatch(editCard(id, listID, cardText));\n    setIsEditing(false);\n  };\n\n  const handleDeleteCard = e => {\n    console.log(listID);\n    dispatch(deleteCard(id, listID));\n  };\n\n  const renderEditForm = () => {\n    return (\n      <TrelloForm text={cardText} onChange={handleChange} closeForm={closeForm}>\n        <TrelloButton onClick={saveCard}>Save</TrelloButton>\n      </TrelloForm>\n    );\n  };\n\n  const renderCard = () => {\n    return (\n      <Draggable draggableId={String(id)} index={index}>\n        {provided => (\n          <CardContainer\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            onDoubleClick={() => setIsEditing(true)}\n          >\n            <Card>\n              <EditButton\n                onMouseDown={() => setIsEditing(true)}\n                fontSize=\"small\"\n              >\n                edit\n              </EditButton>\n              <DeleteButton fontSize=\"small\" onMouseDown={handleDeleteCard}>\n                delete\n              </DeleteButton>\n\n              <CardContent>\n                <Typography>{text}</Typography>\n              </CardContent>\n            </Card>\n          </CardContainer>\n        )}\n      </Draggable>\n    );\n  };\n\n  return isEditing ? renderEditForm() : renderCard();\n});\n\nexport default connect()(TrelloCard);\n","import React from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nimport styled from \"styled-components\";\n\nconst TrelloOpenForm = ({ list, children, onClick }) => {\n  const buttonTextOpacity = list ? 1 : 0.5;\n  const buttonTextColor = list ? \"white\" : \"inherit\";\n  const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\n\n  const OpenFormButton = styled.div`\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    border-radius: 3px;\n    height: 36px;\n    margin-left: 8px;\n    width: 300px;\n    padding-left: 10px;\n    padding-right: 10px;\n    opacity: ${buttonTextOpacity};\n    color: ${buttonTextColor};\n    background-color: ${buttonTextBackground};\n  `;\n\n  return (\n    <OpenFormButton onClick={onClick}>\n      <Icon>add</Icon>\n      <p style={{ flexShrink: 0 }}>{children}</p>\n    </OpenFormButton>\n  );\n};\n\nexport default TrelloOpenForm;\n","import React from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nimport TrelloButton from \"./TrelloButton\";\nimport { connect } from \"react-redux\";\nimport { addList, addCard } from \"../actions\";\nimport styled from \"styled-components\";\nimport TrelloForm from \"./TrelloForm\";\nimport TrelloOpenForm from \"./TrelloOpenForm\";\n\nclass TrelloCreate extends React.PureComponent {\n  state = {\n    formOpen: false,\n    text: \"\"\n  };\n\n  openForm = () => {\n    this.setState({\n      formOpen: true\n    });\n  };\n\n  closeForm = e => {\n    this.setState({\n      formOpen: false\n    });\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      text: e.target.value\n    });\n  };\n\n  handleAddList = () => {\n    const { dispatch } = this.props;\n    const { text } = this.state;\n\n    if (text) {\n      this.setState({\n        text: \"\"\n      });\n      dispatch(addList(text));\n    }\n\n    return;\n  };\n\n  handleAddCard = () => {\n    const { dispatch, listID } = this.props;\n    const { text } = this.state;\n\n    if (text) {\n      this.setState({\n        text: \"\"\n      });\n      dispatch(addCard(listID, text));\n    }\n  };\n\n  renderOpenForm = () => {\n    const { list } = this.props;\n\n    const buttonText = list ? \"Add another list\" : \"Add another card\";\n    const buttonTextOpacity = list ? 1 : 0.5;\n    const buttonTextColor = list ? \"white\" : \"inherit\";\n    const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\n\n    const OpenFormButton = styled.div`\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n      border-radius: 3px;\n      height: 36px;\n      margin-left: 8px;\n      width: 300px;\n      padding-left: 10px;\n      padding-right: 10px;\n      opacity: ${buttonTextOpacity};\n      color: ${buttonTextColor};\n      background-color: ${buttonTextBackground};\n    `;\n\n    return (\n      <OpenFormButton onClick={this.openForm}>\n        <Icon>add</Icon>\n        <p style={{ flexShrink: 0 }}>{buttonText}</p>\n      </OpenFormButton>\n    );\n  };\n\n  render() {\n    const { text } = this.state;\n    const { list } = this.props;\n    return this.state.formOpen ? (\n      <TrelloForm\n        text={text}\n        onChange={this.handleInputChange}\n        closeForm={this.closeForm}\n      >\n        <TrelloButton onClick={list ? this.handleAddList : this.handleAddCard}>\n          {list ? \"Add List\" : \"Add Card\"}\n        </TrelloButton>\n      </TrelloForm>\n    ) : (\n      <TrelloOpenForm list={list} onClick={this.openForm}>\n        {list ? \"Add another list\" : \"Add another card\"}\n      </TrelloOpenForm>\n    );\n  }\n}\n\nexport default connect()(TrelloCreate);\n","import React, { useState } from \"react\";\nimport TrelloCard from \"./TrelloCard\";\nimport TrelloCreate from \"./TrelloCreate\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { editTitle, deleteList } from \"../actions\";\nimport Icon from \"@material-ui/core/Icon\";\n\nconst ListContainer = styled.div`\n  background-color: #dfe3e6;\n  border-radius: 3px;\n  width: 300px;\n  padding: 8px;\n  height: 100%;\n  margin: 0 8px 0 0;\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  border: none;\n  outline-color: blue;\n  border-radius: 3px;\n  margin-bottom: 3px;\n  padding: 5px;\n`;\n\nconst TitleContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n`;\n\nconst DeleteButton = styled(Icon)`\n  cursor: pointer;\n  transition: opacity 0.3s ease-in-out;\n  opacity: 0.4;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst ListTitle = styled.h4`\n  transition: background 0.3s ease-in;\n  ${TitleContainer}:hover & {\n    background: #ccc;\n  }\n`;\n\nconst TrelloList = ({ title, cards, listID, index, dispatch }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [listTitle, setListTitle] = useState(title);\n\n  const renderEditInput = () => {\n    return (\n      <form onSubmit={handleFinishEditing}>\n        <StyledInput\n          type=\"text\"\n          value={listTitle}\n          onChange={handleChange}\n          autoFocus\n          onFocus={handleFocus}\n          onBlur={handleFinishEditing}\n        />\n      </form>\n    );\n  };\n\n  const handleFocus = e => {\n    e.target.select();\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    setListTitle(e.target.value);\n  };\n\n  const handleFinishEditing = e => {\n    setIsEditing(false);\n    dispatch(editTitle(listID, listTitle));\n  };\n\n  const handleDeleteList = () => {\n    dispatch(deleteList(listID));\n  };\n\n  return (\n    <Draggable draggableId={String(listID)} index={index}>\n      {provided => (\n        <ListContainer\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n        >\n          <Droppable droppableId={String(listID)} type=\"card\">\n            {provided => (\n              <div>\n                <div>\n                  {isEditing ? (\n                    renderEditInput()\n                  ) : (\n                    <TitleContainer onClick={() => setIsEditing(true)}>\n                      <ListTitle>{listTitle}</ListTitle>\n                      <DeleteButton onClick={handleDeleteList}>\n                        delete\n                      </DeleteButton>\n                    </TitleContainer>\n                  )}\n                </div>\n                <div {...provided.droppableProps} ref={provided.innerRef}>\n                  {cards.map((card, index) => (\n                    <TrelloCard\n                      key={card.id}\n                      text={card.text}\n                      id={card.id}\n                      index={index}\n                      listID={listID}\n                    />\n                  ))}\n                  {provided.placeholder}\n                  <TrelloCreate listID={listID} />\n                </div>\n              </div>\n            )}\n          </Droppable>\n        </ListContainer>\n      )}\n    </Draggable>\n  );\n};\n\nexport default connect()(TrelloList);\n","import React, { PureComponent } from \"react\";\nimport TrelloList from \"./TrelloList\";\nimport { connect } from \"react-redux\";\nimport TrelloCreate from \"./TrelloCreate\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { setActiveBoard } from \"../actions\";\nimport { Link } from \"react-router-dom\";\n\nconst ListsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\n// TODO: Fix performance issue\n\nclass TrelloBoard extends PureComponent {\n  componentDidMount() {\n    const { boardID } = this.props.match.params;\n\n    this.props.dispatch(setActiveBoard(boardID));\n  }\n\n  onDragEnd = result => {\n    const { destination } = result;\n\n    if (!destination) {\n      return;\n    }\n  };\n\n  render() {\n    const { lists, cards, match, boards } = this.props;\n    const { boardID } = match.params;\n    const board = boards[boardID];\n    if (!board) {\n      return <p>Board not found</p>;\n    }\n    const listOrder = board.lists;\n\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Link to=\"/\">Go Back</Link>\n        <h2>{board.title}</h2>\n        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\n          {provided => (\n            <ListsContainer\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {listOrder.map((listID, index) => {\n                const list = lists[listID];\n                if (list) {\n                  const listCards = list.cards.map(cardID => cards[cardID]);\n\n                  return (\n                    <TrelloList\n                      listID={list.id}\n                      key={list.id}\n                      title={list.title}\n                      cards={listCards}\n                      index={index}\n                    />\n                  );\n                }\n              })}\n              {provided.placeholder}\n              <TrelloCreate list />\n            </ListsContainer>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  lists: state.lists,\n  cards: state.cards,\n  boards: state.boards\n});\n\nexport default connect(mapStateToProps)(TrelloBoard);\n","import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nexport const setActiveBoard = id => {\n  return {\n    type: CONSTANTS.SET_ACTIVE_BOARD,\n    payload: id\n  };\n};\n\nexport const addBoard = title => {\n  const id = uuid();\n  return {\n    type: CONSTANTS.ADD_BOARD,\n    payload: { title, id }\n  };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Thumbnail = styled.div`\n  height: 280px;\n  width: 280px;\n  background: blue;\n  padding: 10px;\n  margin: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 3px;\n  box-shadow: 0 2px 4px grey;\n`;\n\nconst Title = styled.h4`\n  color: red;\n  text-decoration: none;\n`;\n\nconst BoardThumbnail = ({ title }) => {\n  console.log(title);\n  return (\n    <Thumbnail>\n      <Title>{title}</Title>\n    </Thumbnail>\n  );\n};\n\nexport default BoardThumbnail;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addBoard } from \"../actions\";\nimport BoardThumbnail from \"./BoardThumbnail\";\n\nconst Thumbnails = styled.div`\n  flex: 1;\n  height: 50%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst HomeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-sizing: border-box;\n`;\n\nconst CreateTitle = styled.h3`\n  font-size: 48px;\n  color: white;\n  font-weight: bold;\n  font-family: Arial, Helvetica, sans-serif;\n`;\n\nconst CreateInput = styled.input`\n  width: 400px;\n  height: 80px;\n  font-size: 22px;\n  padding: 10px;\n  box-sizing: border-box;\n  border-radius: 3px;\n  border: none;\n  outline-color: blue;\n  box-shadow: 0 2px 4px grey;\n  align-self: center;\n`;\n\nconst Home = ({ boards, boardOrder, dispatch }) => {\n  // this is the home site that shows you your boards and you can also create a Board here.\n\n  const [newBoardTitle, setNewBoardTitle] = useState(\"\");\n\n  const handleChange = e => {\n    setNewBoardTitle(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addBoard(newBoardTitle));\n  };\n\n  const renderBoards = () => {\n    return boardOrder.map(boardID => {\n      const board = boards[boardID];\n\n      return (\n        <Link\n          key={boardID}\n          to={`/${board.id}`}\n          style={{ textDecoration: \"none\" }}\n        >\n          <BoardThumbnail {...board} />\n        </Link>\n      );\n    });\n  };\n\n  const renderCreateBoard = () => {\n    return (\n      <form onSubmit={handleSubmit} style={{ textAlign: \"center\" }}>\n        <CreateTitle>Create a new Board</CreateTitle>\n        <CreateInput\n          onChange={handleChange}\n          value={newBoardTitle}\n          placeholder=\"Your boards title...\"\n          type=\"text\"\n        />\n      </form>\n    );\n  };\n\n  return (\n    <HomeContainer>\n      <Thumbnails>{renderBoards()}</Thumbnails>\n      {renderCreateBoard()}\n    </HomeContainer>\n  );\n};\n\nconst mapStateToProps = state => ({\n  boards: state.boards,\n  boardOrder: state.boardOrder\n});\n\nexport default connect(mapStateToProps)(Home);\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport TrelloBoard from \"../components/TrelloBoard\";\nimport Home from \"../components/Home\";\n\nconst AppRouter = () => {\n  return (\n    <Router>\n      <div>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/:boardID\" component={TrelloBoard} />\n      </div>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { PureComponent } from \"react\";\nimport Routes from \"../routes\";\n\nclass App extends PureComponent {\n  render() {\n    return <Routes />;\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./store\";\nimport App from \"./components/App\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst { persistor, store } = Store();\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}